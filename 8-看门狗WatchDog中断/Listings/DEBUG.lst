C51 COMPILER V9.56.0.0   DEBUG                                                             10/16/2020 22:59:45 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE DEBUG
OBJECT MODULE PLACED IN .\Objects\DEBUG.obj
COMPILER INVOKED BY: F:\Keil\C51\BIN\C51.EXE DEBUG.C OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DEBUG.
                    -lst) TABS(2) OBJECT(.\Objects\DEBUG.obj)

line level    source

   1          /********************************** (C) COPYRIGHT *******************************
   2          * File Name          : DEBUG.C
   3          * Author             : WCH
   4          * Version            : V1.3
   5          * Date               : 2016/06/24
   6          * Description        : CH559 DEBUG Interface
   7                               (1)„ÄÅ‰∏≤Âè£0ËæìÂá∫ÊâìÂç∞‰ø°ÊÅØÔºåÊ≥¢ÁâπÁéáÂèØÂèò;                        
   8          *******************************************************************************/
   9          
  10          #include <stdio.h>
  11          #include "CH559.H"
  12          
  13          #define  FREQ_SYS 12000000
  14          #ifndef  BUAD
  15          #define  BUAD    57600
  16          #endif
  17          
  18          /*******************************************************************************
  19          * Function Name  : CfgFsys( )
  20          * Description    : CH559Êó∂ÈíüÈÄâÊã©ÂíåÈÖçÁΩÆÂáΩÊï∞,ÈªòËÆ§‰ΩøÁî®ÂÜÖÈÉ®Êô∂ÊåØ12MHzÔºåÂ¶ÇÊûúÂÆö‰πâ‰∫ÜFREQ_SY
             -SÂèØ‰ª•
  21                             Ê†πÊçÆPLL_CFGÂíåCLOCK_CFGÈÖçÁΩÆÂæóÂà∞ÔºåÂÖ¨ÂºèÂ¶Ç‰∏ãÔºö
  22                             Fsys = (Fosc * ( PLL_CFG & MASK_PLL_MULT ))/(CLOCK_CFG & MASK_SYS_CK_DIV);
  23                             ÂÖ∑‰ΩìÊó∂ÈíüÈúÄË¶ÅËá™Â∑±ÈÖçÁΩÆ
  24          * Input          : None
  25          * Output         : None
  26          * Return         : None
  27          *******************************************************************************/ 
  28          void  CfgFsys( )  
  29          {
  30   1          SAFE_MOD = 0x55;                                                           //ÂºÄÂêØÂÆâÂÖ®Ê®°Âºè
  31   1          SAFE_MOD = 0xAA;                                                 
  32   1      //  CLOCK_CFG |= bOSC_EN_XT;                                                   //‰ΩøËÉΩÂ§ñÈÉ®Êô∂ÊåØ       
             -                                  
  33   1      //  CLOCK_CFG &= ~bOSC_EN_INT;                                              
  34   1      //  CLOCK_CFG &= ~MASK_SYS_CK_DIV;
  35   1      //  CLOCK_CFG |= 6;                                                            //ÈÖçÁΩÆÁ≥ªÁªüÊó∂Èíü48MHz
  36   1      //  CLOCK_CFG |= 8;                                                            //ÈÖçÁΩÆÁ≥ªÁªüÊó∂Èíü36MHz
  37   1      //  CLOCK_CFG |= 10;                                                           //ÈÖçÁΩÆÁ≥ªÁªüÊó∂Èíü28.8MHz
  38   1      //  CLOCK_CFG |= 12;                                                           //ÈÖçÁΩÆÁ≥ªÁªüÊó∂Èíü24MHz
  39   1      //  CLOCK_CFG |= 16;                                                           //ÈÖçÁΩÆÁ≥ªÁªüÊó∂Èíü18MHz  
  40   1      /*56MHz
  41   1      //  CLOCK_CFG &= ~MASK_SYS_CK_DIV;
  42   1      //  CLOCK_CFG |= 6;                                                            //ÈÖçÁΩÆÁ≥ªÁªüÊó∂Èíü56MHz  
             -  
  43   1          PLL_CFG = 0xFC;
  44   1      */  
  45   1          SAFE_MOD = 0xFF;                                                           //ÂÖ≥Èó≠ÂÆâÂÖ®Ê®°Âºè  
  46   1      //  Â¶ÇÊûú‰øÆÊîπ‰∏ªÈ¢ëÔºåË¶ÅÂêåÊó∂‰øÆÊîπFREQ_SYSÔºåÂê¶Âàô‰ºöÈÄ†ÊàêÂª∂Êó∂ÂáΩÊï∞‰∏çÂáÜ
  47   1      }
  48          
  49          /*******************************************************************************
  50          * Function Name  : mDelayus(UNIT16 n)
  51          * Description    : usÂª∂Êó∂ÂáΩÊï∞
C51 COMPILER V9.56.0.0   DEBUG                                                             10/16/2020 22:59:45 PAGE 2   

  52          * Input          : UNIT16 n
  53          * Output         : None
  54          * Return         : None
  55          *******************************************************************************/ 
  56          void  mDelayuS( UINT16 n )  // ‰ª•uS‰∏∫Âçï‰ΩçÂª∂Êó∂
  57          {
  58   1        while ( n ) {  // total = 12~13 Fsys cycles, 1uS @Fsys=12MHz
  59   2          ++ SAFE_MOD;  // 2 Fsys cycles, for higher Fsys, add operation here
  60   2      #ifdef  FREQ_SYS
  61   2      #if   FREQ_SYS >= 14000000
                  ++ SAFE_MOD;
              #endif
  64   2      #if   FREQ_SYS >= 16000000
                  ++ SAFE_MOD;
              #endif
  67   2      #if   FREQ_SYS >= 18000000
                  ++ SAFE_MOD;
              #endif
  70   2      #if   FREQ_SYS >= 20000000
                  ++ SAFE_MOD;
              #endif
  73   2      #if   FREQ_SYS >= 22000000
                  ++ SAFE_MOD;
              #endif
  76   2      #if   FREQ_SYS >= 24000000
                  ++ SAFE_MOD;
              #endif
  79   2      #if   FREQ_SYS >= 26000000
                  ++ SAFE_MOD;
              #endif
  82   2      #if   FREQ_SYS >= 28000000
                  ++ SAFE_MOD;
              #endif
  85   2      #if   FREQ_SYS >= 30000000
                  ++ SAFE_MOD;
              #endif
  88   2      #if   FREQ_SYS >= 32000000
                  ++ SAFE_MOD;
              #endif
  91   2      #if   FREQ_SYS >= 34000000
                  ++ SAFE_MOD;
              #endif
  94   2      #if   FREQ_SYS >= 36000000
                  ++ SAFE_MOD;
              #endif
  97   2      #if   FREQ_SYS >= 38000000
                  ++ SAFE_MOD;
              #endif
 100   2      #if   FREQ_SYS >= 40000000
                  ++ SAFE_MOD;
              #endif
 103   2      #if   FREQ_SYS >= 42000000
                  ++ SAFE_MOD;
              #endif
 106   2      #if   FREQ_SYS >= 44000000
                  ++ SAFE_MOD;
              #endif
 109   2      #if   FREQ_SYS >= 46000000
                  ++ SAFE_MOD;
              #endif
 112   2      #if   FREQ_SYS >= 48000000
                  ++ SAFE_MOD;
C51 COMPILER V9.56.0.0   DEBUG                                                             10/16/2020 22:59:45 PAGE 3   

              #endif
 115   2      #if   FREQ_SYS >= 50000000
                  ++ SAFE_MOD;
              #endif
 118   2      #if   FREQ_SYS >= 52000000
                  ++ SAFE_MOD;
              #endif
 121   2      #if   FREQ_SYS >= 54000000
                  ++ SAFE_MOD;
              #endif
 124   2      #if   FREQ_SYS >= 56000000
                  ++ SAFE_MOD;
              #endif
 127   2      #endif
 128   2          -- n;
 129   2        }
 130   1      }
 131          
 132          /*******************************************************************************
 133          * Function Name  : mDelayms(UNIT16 n)
 134          * Description    : msÂª∂Êó∂ÂáΩÊï∞
 135          * Input          : UNIT16 n
 136          * Output         : None
 137          * Return         : None
 138          *******************************************************************************/
 139          void  mDelaymS( UINT16 n )                                                  // ‰ª•mS‰∏∫Âçï‰ΩçÂª∂Êó∂
 140          {
 141   1        while ( n ) 
 142   1        {
 143   2          mDelayuS( 1000 );
 144   2          -- n;
 145   2        }
 146   1      }                                         
 147          
 148          /*******************************************************************************
 149          * Function Name  : CH559UART0Alter()
 150          * Description    : CH559‰∏≤Âè£0ÂºïËÑöÊò†Â∞Ñ,‰∏≤Âè£Êò†Â∞ÑÂà∞P0.2ÂíåP0.3
 151          * Input          : None
 152          * Output         : None
 153          * Return         : None
 154          *******************************************************************************/
 155          void CH559UART0Alter()
 156          {
 157   1          PORT_CFG |= bP0_OC;
 158   1          P0_DIR |= bTXD_;
 159   1          P0_PU |= bTXD_ | bRXD_;
 160   1          PIN_FUNC |= bUART0_PIN_X;                                                  //‰∏≤Âè£Êò†Â∞ÑÂà∞P0.2ÂíåP0.
             -3
 161   1      }
 162          
 163          /*******************************************************************************
 164          * Function Name  : mInitSTDIO()
 165          * Description    : CH559‰∏≤Âè£0ÂàùÂßãÂåñ,ÈªòËÆ§‰ΩøÁî®T1‰ΩúUART0ÁöÑÊ≥¢ÁâπÁéáÂèëÁîüÂô®,‰πüÂèØ‰ª•‰ΩøÁî®T2
 166                             ‰Ωú‰∏∫Ê≥¢ÁâπÁéáÂèëÁîüÂô®
 167          * Input          : None
 168          * Output         : None
 169          * Return         : None
 170          *******************************************************************************/
 171          void  mInitSTDIO( )
 172          {
 173   1          UINT32 x;
 174   1          UINT8 x2; 
C51 COMPILER V9.56.0.0   DEBUG                                                             10/16/2020 22:59:45 PAGE 4   

 175   1      
 176   1          SM0 = 0;
 177   1          SM1 = 1;
 178   1          SM2 = 0;                                                                   //‰∏≤Âè£0‰ΩøÁî®Ê®°Âºè1
 179   1                                                                                     //‰ΩøÁî®Timer1‰Ωú‰∏∫Ê≥¢ÁâπÁ
             -éáÂèëÁîüÂô®
 180   1          RCLK = 0;                                                                  //UART0Êé•Êî∂Êó∂Èíü
 181   1          TCLK = 0;                                                                  //UART0ÂèëÈÄÅÊó∂Èíü
 182   1          PCON |= SMOD;
 183   1          x = 10 * FREQ_SYS / BUAD / 16;                                             //Â¶ÇÊûúÊõ¥Êîπ‰∏ªÈ¢ëÔºåÊ≥®Ê
             -ÑèxÁöÑÂÄº‰∏çË¶ÅÊ∫¢Âá∫                            
 184   1          x2 = x % 10;
 185   1          x /= 10;
 186   1          if ( x2 >= 5 ) x ++;                                                       //ÂõõËàç‰∫îÂÖ•
 187   1      
 188   1          TMOD = TMOD & ~ bT1_GATE & ~ bT1_CT & ~ MASK_T1_MOD | bT1_M1;              //0X20ÔºåTimer1‰Ωú‰∏∫8‰ΩçËá
             -™Âä®ÈáçËΩΩÂÆöÊó∂Âô®
 189   1          T2MOD = T2MOD | bTMR_CLK | bT1_CLK;                                        //Timer1Êó∂ÈíüÈÄâÊã©
 190   1          TH1 = 0-x;                                                                 //12MHzÊô∂ÊåØ,buad/12‰∏∫ÂÆû
             -ÈôÖÈúÄËÆæÁΩÆÊ≥¢ÁâπÁéá
 191   1          TR1 = 1;                                                                   //ÂêØÂä®ÂÆöÊó∂Âô®1
 192   1          TI = 1;
 193   1          REN = 1;                                                                   //‰∏≤Âè£0Êé•Êî∂‰ΩøËÉΩ
 194   1      }
 195          
 196          /*******************************************************************************
 197          * Function Name  : CH559UART0RcvByte()
 198          * Description    : CH559UART0Êé•Êî∂‰∏Ä‰∏™Â≠óËäÇ
 199          * Input          : None
 200          * Output         : None
 201          * Return         : SBUF
 202          *******************************************************************************/
 203          UINT8  CH559UART0RcvByte( )
 204          {
 205   1          while(RI == 0);                                                            //Êü•ËØ¢Êé•Êî∂Ôºå‰∏≠Êñ≠ÊñπÂ
             -ºèÂèØ‰∏çÁî®
 206   1          RI = 0;
 207   1          return SBUF;
 208   1      }
 209          
 210          /*******************************************************************************
 211          * Function Name  : CH559UART0SendByte(UINT8 SendDat)
 212          * Description    : CH559UART0ÂèëÈÄÅ‰∏Ä‰∏™Â≠óËäÇ
 213          * Input          : UINT8 SendDatÔºõË¶ÅÂèëÈÄÅÁöÑÊï∞ÊçÆ
 214          * Output         : None
 215          * Return         : None
 216          *******************************************************************************/
 217          void CH559UART0SendByte(UINT8 SendDat)
 218          {
 219   1        SBUF = SendDat;                                                              //Êü•ËØ¢ÂèëÈÄÅÔºå‰∏≠Êñ≠ÊñπÂº
             -èÂèØ‰∏çÁî®‰∏ãÈù¢2Êù°ËØ≠Âè•,‰ΩÜÂèëÈÄÅÂâçÈúÄTI=0
 220   1        while(TI ==0);
 221   1        TI = 0;
 222   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    192    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       5
C51 COMPILER V9.56.0.0   DEBUG                                                             10/16/2020 22:59:45 PAGE 5   

   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
